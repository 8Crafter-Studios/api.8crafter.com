/**
 * Typdoc hooks and injections for typedoc-plugin-versions
 *
 * @module
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { Application, JSX } from 'typedoc';
/**
 * Injects browser js to control the behaviour of the new `select` DOM element
 * @param app
 */
export function injectSelectJs(app) {
    app.renderer.hooks.on('body.end', (ctx) => {
        return (JSX.createElement("script", { src: ctx.relativeURL('assets/versionsMenu.js'), type: "module" }));
    });
}
const validHookLocations = [
    'head.begin',
    'head.end',
    'body.begin',
    'body.end',
    'content.begin',
    'content.end',
    'sidebar.begin',
    'sidebar.end',
    'pageSidebar.begin',
    'pageSidebar.end',
    'footer.begin',
    'footer.end',
    'comment.beforeTags',
    'comment.afterTags',
];
/**
 * Injects the new `select` dropdown into the HTML
 * @param app
 * @param domLocation
 */
export function injectSelectHtml(app, domLocation) {
    if (validHookLocations.indexOf(domLocation) > -1) {
        if (domLocation === 'false')
            return;
        app.renderer.hooks.on(domLocation, () => (JSX.createElement("select", { id: "plugin-versions-select", name: "versions" })));
    }
    else {
        app.renderer.hooks.on('head.end', () => (JSX.createElement("style", null, `
				.tsd-ext-version-select .settings-label {
					margin: 0.75rem 0.75rem 0 0;
                }
			`)));
        app.renderer.hooks.on('pageSidebar.begin', () => (JSX.createElement("div", { class: "tsd-ext-version-select" },
            JSX.createElement("label", { class: "settings-label", for: "plugin-versions-select" }, "Version"),
            JSX.createElement("select", { id: "plugin-versions-select", name: "versions" }))));
    }
}
//# sourceMappingURL=hooks.js.map